# We specify the connection to the database.
# Connection method, what kind of database, specify that the database will be stored in memory
# and not on disk and specify the name of the database
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=postgres
spring.datasource.password=password


#spring.jpa.hibernate.ddl-auto=update is a Hibernate setting that is used to control how Hibernate will create and update database tables.
#
#The update value indicates to Hibernate that it should update the database tables according to the changes made in the @Entity annotations.
#
#For example, if you add a new property to the @Entity object, Hibernate will automatically create the corresponding column in the database table. If you change the type of the property, Hibernate will change the type of the corresponding column.
#
#The update value also tells Hibernate that it should delete database tables if the corresponding @Entity objects have been deleted from the application.
#
#Using the update value allows Hibernate to automatically keep the database schema up to date. This is especially useful when developing new applications or when making changes to existing applications.
#
#However, you should use the update value with caution, as it can lead to data loss if the changes made to the @Entity annotations are incompatible with the existing database schema.
spring.jpa.hibernate.ddl-auto=update

spring.cors.allowed-origins=http://localhost:8081

lessonSpring.quickstar.api-key.key=X-API-KEY
lessonSpring.quickstar.api-key.value=d97b0045-83cc-47a5-b51f-2bc5dc9d54ce
